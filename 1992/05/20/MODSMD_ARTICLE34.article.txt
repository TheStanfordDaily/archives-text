# Software patents stir debate
## 
### Peter Stevens 
A dispute over patents is dividing the software
industry, with some arguing that software should
be excluded from current patent law because it
differs so radically from other inventions. Others
argue that the current laws work and need only
minor revisions.
Important issues are at stake: innovation, pro
ductivity and the survival of small companies.
The debate over software patents stems from
advances in technology that are outrunning
existing legal definitions. Until the mid-1980s,
patents were not issued for software inventions.
However, in 1983 a software patent, originally
denied in the 19705, was issued after an appeal by
the inventors.
A central issue in the debate is whether
patenting software serves the goals of patent law.
Patent law, as it was formulated about two cen
turies ago, was intended to encourage innovation
by giving inventors an incentive to make their
discoveries public.
Patents grant inventors a 17-year monopoly
on an invention in exchange for divulging the
invention to the general public.
Current patent law makes no distinction
between inventions made using software and
inventions made using other technologies. Just
as a new mechanical or electrical invention can be
patented, so can a software program if it meets all
other applicable criteria.
Those arguing for radical changes in the cur
rent law argue that software is a fundamentally
different technology than electronic and mechan
ical devices and that the software industry is
being hurt by the patentability of software.
Those arguing for leaving the law as it is argue
that software is not fundamentally different from
other technologies, and that far from hurting the
software business, patents are responsible for
much of the recent innovation and new product
introduction.
Richard Stallman, one of the founders of the
League for Programming Freedom, is a well
known software developer and advocate of free
software who opposes copyrights on user inter
faces or patents on software. In a talk at Stanford
earlier this year he presented the League's point
of view that software patents are harming the
software industry.
The worst danger, the league claims, is that a
developer might unintentionally violate a patent
because there is no effective way to find out
whether a patent has already been obtained.

This has the effect of stifling small businesses
because of the threat of infringement lawsuits â€”
legal fees alone for an infringement suit could
seriously damage small- and medium-sized busi
nesses.
Another issue noted by the League is that soft
ware is very different than the technologies in
use at the time the patent system was set up.
With these older technologies, invention was con
sidered rare and inventors needed incentive to
disclose their discoveries. However, the process
of creating software is one of constant and fre
quent reinvention.
Paul Heckel, in a separate presentation last
week, disagreed with Stallman and the League.
Heckel is a software developer, the owner of a
small company, author of the book "The Ele
ments of Friendly Software" and the holder of
two software patents. He claims that patents are
in fact beneficial to the software industry, rather
than harmful to it.
In his presentation, and in an article to be pub
lished in the June issue of "Communications of
the ACM," Heckel argues that patents promote
development of products.
"Ideas are cheap; the real problem is develop
ing a product and getting market acceptance,"
Heckel said. "Inventors take risks. Their work
might not be successful, and if it is successful
others would steal the idea without patent pro
tection."
Heckel cited his own infringement claims
against two large companies as an example of
current patent law protecting an inventor.
Further, Heckel claims that there is no funda
mental difference between invention using soft
ware and invention using other technologies. The
problems of developing a product and gaining
market acceptance are similar, whether the prod
uct is a software program or some other technolo
gy-
Heckel does recommend some changes to the
existing patent system, such as reducing the
costs of obtaining a patent and changing the rules
to allow small companies to more easily defend
their patents.
"Lawmakers need to clarify patent law as it
applies to software," said Computer Science Prof.
Terry Winograd, a former president of Computer
Professionals for Social Responsibility. "The cur
rent situation is causing problems, as is evi
denced by this debate. It is the responsibility of
computer professionals to give lawmakers
enough information to enable them to make
these needed clarifications."
