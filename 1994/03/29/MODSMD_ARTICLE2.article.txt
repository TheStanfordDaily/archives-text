# 'In the game'
## New class combines law and technology 
### Julie Makinen Senior staff writer 
When Law School Lecturer
Carey Heckman talks about his
new class, he uses words like "em
powerment" and "consciousness
raising." But Heckman's class
isn't about race, ethnicity or even
civil disobedience.
It's a computer science class on
technology law.
Computer Science 403, "Law
for Computer Science Profession
als," is a one-unit class designed
to provide soon-to-be computer

science professionals with infor
mation they will need to make
some law-related decisions which
typically arise in their field. Un
like some related classes which
deal more theoretically with
ethics and other topics, Heck
man's class is intended to be prac
tical.
"The idea is to make sure Stan
ford computer science profession
als are equipped to be 'in the
game' . . . rather than to be left
out and take orders from someone
else," says Heckman, a former
technology lawyer and program
mer who now serves as co-direc
tor for the Stanford Law and
Technology Policy Center.
The class is built around four
"case studies" of situations which
are often encountered by com
puter scientists, including inven
tion assignment agreements
(usually signed upon employ
ment), and non-disclosure agree
ments.
"People who sign those agree
ments, sometimes they'll get
caught up, finding they can't do
this or that because they signed
the agreement," says Heckman.
"It constrains them from what
they want to do next."
Part of the class will focus on
issues of intellectual property,
such as software design.
"If you are aware what is pro
tectable and what isn't when you
are designing your program, if
you are seeking to be more pro
tected you will incorporate in
your design those types of factors
that will qualify you for more
protection," says Heckman, who
came to Stanford in 1991 after
serving as senior corporate coun
sel for Novell, a networking soft
ware company.
"Knowing the rules of the
game enables you to design some
thing with higher market value
because you've got more protec
tion built into it."

Other topics to be covered
include the distinction between
being a consultant and an
employee, and the advantages
and disadvantages of each. And
while the course isn't intended to
"create junior lawyers," it is
hoped to make computer science
professionals better consumers of
legal services.
"It's always good to know the
law," says Computer Science
Prof. Terry Winograd. "It's use
ful because that's what [comput
er scientists] will encounter in
the real world."
"Part of this is an conscious
ness-raising exercise — pardon
my late '60s mentality," says
Heckman. "I would like the
future computer science profes
sionals to come out of the class
aware that these things are out
there ... so they're in a better
position to make use of legal
professionals wherever they end
up working, or in their own
companies, if they start their
own."
The course is an offshoot of
the Law School's well-regarded
intellectual property program.
And according to Heckman, it is
also just one example of the
increasing amount of cooperation
between different disciplines and
schools at Stanford.
"More and more of the castle
walls and drawbridges are com
ing down," says Heckman. "Vari
ous departments and schools are
working together and looking to
others more to produce multidis
ciplinary approaches to areas of
knowledge."
When Law School Lecturer
Carey Heckman talks about his
new class, he uses words like "em
powerment" and "consciousness
raising." But Heckman's class
isn't about race, ethnicity or even
civil disobedience.
It's a computer science class on
technology law.
Computer Science 403, "Law
for Computer Science Profession
als," is a one-unit class designed
to provide soon-to-be computer

science professionals with infor
mation they will need to make
some law-related decisions which
typically arise in their field. Un
like some related classes which
deal more theoretically with
ethics and other topics, Heck
man's class is intended to be prac
tical.
"The idea is to make sure Stan
ford computer science profession
als are equipped to be 'in the
game' . . . rather than to be left
out and take orders from someone
else," says Heckman, a former
technology lawyer and program
mer who now serves as co-direc
tor for the Stanford Law and
Technology Policy Center.
The class is built around four
"case studies" of situations which
are often encountered by com
puter scientists, including inven
tion assignment agreements
(usually signed upon employ
ment), and non-disclosure agree
ments.
"People who sign those agree
ments, sometimes they'll get
caught up, finding they can't do
this or that because they signed
the agreement," says Heckman.
"It constrains them from what
they want to do next."
Part of the class will focus on
issues of intellectual property,
such as software design.
"If you are aware what is pro
tectable and what isn't when you
are designing your program, if
you are seeking to be more pro
tected you will incorporate in
your design those types of factors
that will qualify you for more
protection," says Heckman, who
came to Stanford in 1991 after
serving as senior corporate coun
sel for Novell, a networking soft
ware company.
"Knowing the rules of the
game enables you to design some
thing with higher market value
because you've got more protec
tion built into it."

Other topics to be covered
include the distinction between
being a consultant and an
employee, and the advantages
and disadvantages of each. And
while the course isn't intended to
"create junior lawyers," it is
hoped to make computer science
professionals better consumers of
legal services.
"It's always good to know the
law," says Computer Science
Prof. Terry Winograd. "It's use
ful because that's what [comput
er scientists] will encounter in
the real world."
"Part of this is an conscious
ness-raising exercise — pardon
my late '60s mentality," says
Heckman. "I would like the
future computer science profes
sionals to come out of the class
aware that these things are out
there ... so they're in a better
position to make use of legal
professionals wherever they end
up working, or in their own
companies, if they start their
own."
The course is an offshoot of
the Law School's well-regarded
intellectual property program.
And according to Heckman, it is
also just one example of the
increasing amount of cooperation
between different disciplines and
schools at Stanford.
"More and more of the castle
walls and drawbridges are com
ing down," says Heckman. "Vari
ous departments and schools are
working together and looking to
others more to produce multidis
ciplinary approaches to areas of
knowledge."
When Law School Lecturer
Carey Heckman talks about his
new class, he uses words like "em
powerment" and "consciousness
raising." But Heckman's class
isn't about race, ethnicity or even
civil disobedience.
It's a computer science class on
technology law.
Computer Science 403, "Law
for Computer Science Profession
als," is a one-unit class designed
to provide soon-to-be computer

science professionals with infor
mation they will need to make
some law-related decisions which
typically arise in their field. Un
like some related classes which
deal more theoretically with
ethics and other topics, Heck
man's class is intended to be prac
tical.
"The idea is to make sure Stan
ford computer science profession
als are equipped to be 'in the
game' . . . rather than to be left
out and take orders from someone
else," says Heckman, a former
technology lawyer and program
mer who now serves as co-direc
tor for the Stanford Law and
Technology Policy Center.
The class is built around four
"case studies" of situations which
are often encountered by com
puter scientists, including inven
tion assignment agreements
(usually signed upon employ
ment), and non-disclosure agree
ments.
"People who sign those agree
ments, sometimes they'll get
caught up, finding they can't do
this or that because they signed
the agreement," says Heckman.
"It constrains them from what
they want to do next."
Part of the class will focus on
issues of intellectual property,
such as software design.
"If you are aware what is pro
tectable and what isn't when you
are designing your program, if
you are seeking to be more pro
tected you will incorporate in
your design those types of factors
that will qualify you for more
protection," says Heckman, who
came to Stanford in 1991 after
serving as senior corporate coun
sel for Novell, a networking soft
ware company.
"Knowing the rules of the
game enables you to design some
thing with higher market value
because you've got more protec
tion built into it."

Other topics to be covered
include the distinction between
being a consultant and an
employee, and the advantages
and disadvantages of each. And
while the course isn't intended to
"create junior lawyers," it is
hoped to make computer science
professionals better consumers of
legal services.
"It's always good to know the
law," says Computer Science
Prof. Terry Winograd. "It's use
ful because that's what [comput
er scientists] will encounter in
the real world."
"Part of this is an conscious
ness-raising exercise — pardon
my late '60s mentality," says
Heckman. "I would like the
future computer science profes
sionals to come out of the class
aware that these things are out
there ... so they're in a better
position to make use of legal
professionals wherever they end
up working, or in their own
companies, if they start their
own."
The course is an offshoot of
the Law School's well-regarded
intellectual property program.
And according to Heckman, it is
also just one example of the
increasing amount of cooperation
between different disciplines and
schools at Stanford.
"More and more of the castle
walls and drawbridges are com
ing down," says Heckman. "Vari
ous departments and schools are
working together and looking to
others more to produce multidis
ciplinary approaches to areas of
knowledge."
When Law School Lecturer
Carey Heckman talks about his
new class, he uses words like "em
powerment" and "consciousness
raising." But Heckman's class
isn't about race, ethnicity or even
civil disobedience.
It's a computer science class on
technology law.
Computer Science 403, "Law
for Computer Science Profession
als," is a one-unit class designed
to provide soon-to-be computer

science professionals with infor
mation they will need to make
some law-related decisions which
typically arise in their field. Un
like some related classes which
deal more theoretically with
ethics and other topics, Heck
man's class is intended to be prac
tical.
"The idea is to make sure Stan
ford computer science profession
als are equipped to be 'in the
game' . . . rather than to be left
out and take orders from someone
else," says Heckman, a former
technology lawyer and program
mer who now serves as co-direc
tor for the Stanford Law and
Technology Policy Center.
The class is built around four
"case studies" of situations which
are often encountered by com
puter scientists, including inven
tion assignment agreements
(usually signed upon employ
ment), and non-disclosure agree
ments.
"People who sign those agree
ments, sometimes they'll get
caught up, finding they can't do
this or that because they signed
the agreement," says Heckman.
"It constrains them from what
they want to do next."
Part of the class will focus on
issues of intellectual property,
such as software design.
"If you are aware what is pro
tectable and what isn't when you
are designing your program, if
you are seeking to be more pro
tected you will incorporate in
your design those types of factors
that will qualify you for more
protection," says Heckman, who
came to Stanford in 1991 after
serving as senior corporate coun
sel for Novell, a networking soft
ware company.
"Knowing the rules of the
game enables you to design some
thing with higher market value
because you've got more protec
tion built into it."

Other topics to be covered
include the distinction between
being a consultant and an
employee, and the advantages
and disadvantages of each. And
while the course isn't intended to
"create junior lawyers," it is
hoped to make computer science
professionals better consumers of
legal services.
"It's always good to know the
law," says Computer Science
Prof. Terry Winograd. "It's use
ful because that's what [comput
er scientists] will encounter in
the real world."
"Part of this is an conscious
ness-raising exercise — pardon
my late '60s mentality," says
Heckman. "I would like the
future computer science profes
sionals to come out of the class
aware that these things are out
there ... so they're in a better
position to make use of legal
professionals wherever they end
up working, or in their own
companies, if they start their
own."
The course is an offshoot of
the Law School's well-regarded
intellectual property program.
And according to Heckman, it is
also just one example of the
increasing amount of cooperation
between different disciplines and
schools at Stanford.
"More and more of the castle
walls and drawbridges are com
ing down," says Heckman. "Vari
ous departments and schools are
working together and looking to
others more to produce multidis
ciplinary approaches to areas of
knowledge."
When Law School Lecturer
Carey Heckman talks about his
new class, he uses words like "em
powerment" and "consciousness
raising." But Heckman's class
isn't about race, ethnicity or even
civil disobedience.
It's a computer science class on
technology law.
Computer Science 403, "Law
for Computer Science Profession
als," is a one-unit class designed
to provide soon-to-be computer

science professionals with infor
mation they will need to make
some law-related decisions which
typically arise in their field. Un
like some related classes which
deal more theoretically with
ethics and other topics, Heck
man's class is intended to be prac
tical.
"The idea is to make sure Stan
ford computer science profession
als are equipped to be 'in the
game' . . . rather than to be left
out and take orders from someone
else," says Heckman, a former
technology lawyer and program
mer who now serves as co-direc
tor for the Stanford Law and
Technology Policy Center.
The class is built around four
"case studies" of situations which
are often encountered by com
puter scientists, including inven
tion assignment agreements
(usually signed upon employ
ment), and non-disclosure agree
ments.
"People who sign those agree
ments, sometimes they'll get
caught up, finding they can't do
this or that because they signed
the agreement," says Heckman.
"It constrains them from what
they want to do next."
Part of the class will focus on
issues of intellectual property,
such as software design.
"If you are aware what is pro
tectable and what isn't when you
are designing your program, if
you are seeking to be more pro
tected you will incorporate in
your design those types of factors
that will qualify you for more
protection," says Heckman, who
came to Stanford in 1991 after
serving as senior corporate coun
sel for Novell, a networking soft
ware company.
"Knowing the rules of the
game enables you to design some
thing with higher market value
because you've got more protec
tion built into it."

Other topics to be covered
include the distinction between
being a consultant and an
employee, and the advantages
and disadvantages of each. And
while the course isn't intended to
"create junior lawyers," it is
hoped to make computer science
professionals better consumers of
legal services.
"It's always good to know the
law," says Computer Science
Prof. Terry Winograd. "It's use
ful because that's what [comput
er scientists] will encounter in
the real world."
"Part of this is an conscious
ness-raising exercise — pardon
my late '60s mentality," says
Heckman. "I would like the
future computer science profes
sionals to come out of the class
aware that these things are out
there ... so they're in a better
position to make use of legal
professionals wherever they end
up working, or in their own
companies, if they start their
own."
The course is an offshoot of
the Law School's well-regarded
intellectual property program.
And according to Heckman, it is
also just one example of the
increasing amount of cooperation
between different disciplines and
schools at Stanford.
"More and more of the castle
walls and drawbridges are com
ing down," says Heckman. "Vari
ous departments and schools are
working together and looking to
others more to produce multidis
ciplinary approaches to areas of
knowledge."
When Law School Lecturer
Carey Heckman talks about his
new class, he uses words like "em
powerment" and "consciousness
raising." But Heckman's class
isn't about race, ethnicity or even
civil disobedience.
It's a computer science class on
technology law.
Computer Science 403, "Law
for Computer Science Profession
als," is a one-unit class designed
to provide soon-to-be computer

science professionals with infor
mation they will need to make
some law-related decisions which
typically arise in their field. Un
like some related classes which
deal more theoretically with
ethics and other topics, Heck
man's class is intended to be prac
tical.
"The idea is to make sure Stan
ford computer science profession
als are equipped to be 'in the
game' . . . rather than to be left
out and take orders from someone
else," says Heckman, a former
technology lawyer and program
mer who now serves as co-direc
tor for the Stanford Law and
Technology Policy Center.
The class is built around four
"case studies" of situations which
are often encountered by com
puter scientists, including inven
tion assignment agreements
(usually signed upon employ
ment), and non-disclosure agree
ments.
"People who sign those agree
ments, sometimes they'll get
caught up, finding they can't do
this or that because they signed
the agreement," says Heckman.
"It constrains them from what
they want to do next."
Part of the class will focus on
issues of intellectual property,
such as software design.
"If you are aware what is pro
tectable and what isn't when you
are designing your program, if
you are seeking to be more pro
tected you will incorporate in
your design those types of factors
that will qualify you for more
protection," says Heckman, who
came to Stanford in 1991 after
serving as senior corporate coun
sel for Novell, a networking soft
ware company.
"Knowing the rules of the
game enables you to design some
thing with higher market value
because you've got more protec
tion built into it."

Other topics to be covered
include the distinction between
being a consultant and an
employee, and the advantages
and disadvantages of each. And
while the course isn't intended to
"create junior lawyers," it is
hoped to make computer science
professionals better consumers of
legal services.
"It's always good to know the
law," says Computer Science
Prof. Terry Winograd. "It's use
ful because that's what [comput
er scientists] will encounter in
the real world."
"Part of this is an conscious
ness-raising exercise — pardon
my late '60s mentality," says
Heckman. "I would like the
future computer science profes
sionals to come out of the class
aware that these things are out
there ... so they're in a better
position to make use of legal
professionals wherever they end
up working, or in their own
companies, if they start their
own."
The course is an offshoot of
the Law School's well-regarded
intellectual property program.
And according to Heckman, it is
also just one example of the
increasing amount of cooperation
between different disciplines and
schools at Stanford.
"More and more of the castle
walls and drawbridges are com
ing down," says Heckman. "Vari
ous departments and schools are
working together and looking to
others more to produce multidis
ciplinary approaches to areas of
knowledge."
When Law School Lecturer
Carey Heckman talks about his
new class, he uses words like "em
powerment" and "consciousness
raising." But Heckman's class
isn't about race, ethnicity or even
civil disobedience.
It's a computer science class on
technology law.
Computer Science 403, "Law
for Computer Science Profession
als," is a one-unit class designed
to provide soon-to-be computer

science professionals with infor
mation they will need to make
some law-related decisions which
typically arise in their field. Un
like some related classes which
deal more theoretically with
ethics and other topics, Heck
man's class is intended to be prac
tical.
"The idea is to make sure Stan
ford computer science profession
als are equipped to be 'in the
game' . . . rather than to be left
out and take orders from someone
else," says Heckman, a former
technology lawyer and program
mer who now serves as co-direc
tor for the Stanford Law and
Technology Policy Center.
The class is built around four
"case studies" of situations which
are often encountered by com
puter scientists, including inven
tion assignment agreements
(usually signed upon employ
ment), and non-disclosure agree
ments.
"People who sign those agree
ments, sometimes they'll get
caught up, finding they can't do
this or that because they signed
the agreement," says Heckman.
"It constrains them from what
they want to do next."
Part of the class will focus on
issues of intellectual property,
such as software design.
"If you are aware what is pro
tectable and what isn't when you
are designing your program, if
you are seeking to be more pro
tected you will incorporate in
your design those types of factors
that will qualify you for more
protection," says Heckman, who
came to Stanford in 1991 after
serving as senior corporate coun
sel for Novell, a networking soft
ware company.
"Knowing the rules of the
game enables you to design some
thing with higher market value
because you've got more protec
tion built into it."

Other topics to be covered
include the distinction between
being a consultant and an
employee, and the advantages
and disadvantages of each. And
while the course isn't intended to
"create junior lawyers," it is
hoped to make computer science
professionals better consumers of
legal services.
"It's always good to know the
law," says Computer Science
Prof. Terry Winograd. "It's use
ful because that's what [comput
er scientists] will encounter in
the real world."
"Part of this is an conscious
ness-raising exercise — pardon
my late '60s mentality," says
Heckman. "I would like the
future computer science profes
sionals to come out of the class
aware that these things are out
there ... so they're in a better
position to make use of legal
professionals wherever they end
up working, or in their own
companies, if they start their
own."
The course is an offshoot of
the Law School's well-regarded
intellectual property program.
And according to Heckman, it is
also just one example of the
increasing amount of cooperation
between different disciplines and
schools at Stanford.
"More and more of the castle
walls and drawbridges are com
ing down," says Heckman. "Vari
ous departments and schools are
working together and looking to
others more to produce multidis
ciplinary approaches to areas of
knowledge."
