# Moving towards molecular computers
## Scientists explore chemical ways to power information processing 
### Steven Kasapi 
Recent breakthroughs in molecular
biology and chemistry are paving the
way toward new and potentially more
powerful computers.
In 1959 physicist Richard Feynman
pointed out that we could write all of
human knowledge on the head of a pin
— if only we could harness molecules
themselves to store and process infor
mation.
A modern computer contains mil
lions of tiny electronic devices called
transistors. Each transistor contains
millions of atoms, but no single atom is
particularly important. Collectively the
atoms form the material through
which electrical signals flow.
By Feynman's criterion, a transis
tor-based computer wastes nature's
molecules. In addition, the energy
needed to switch a transistor on or off
— that is, to do a calculation or store
information — is many times larger
than the energy needed to break and
form molecular bonds.
Chemistry and molecular biology
may hold the keys to computers driven
by the power of molecules.
The chemical computer
While modern electronic computers
misinterpret handwriting at staggering
speeds, humans effortlessly use the
chemical reactions in their brains to
sing, dance, and design new computers.
"I don't care what you say," said
Stanford Chemistry Prof. John Ross.
"The brain is chemical. It can only be
chemical."
If so, chemicals may be smarter than
we think.
"You can identify about a thousand
people in one hundred seconds," Ross
continued. "Even a Cray [supercom
puter] can't come close to that. But
you're not breaking any speed
records."
Guided by nature's choice of chem
istry for day-to-day computations, Ross
and several of his co-workers have
devised ways to harness chemical reac
tions to perform the basic operations of
a computer.
The first step toward a chemical
computer was the realization that
chemical reactions could act like a
switch.
The switch is a fundamental ele
ment of a digital computer. Modern
computers have millions of transistor
based switches. Much of the success of
digital computers lies in the ease with
which electronic switches can be
manipulated.
In 1988 a Japanese researcher, M.
Okamoto, and his co-workers demon
strated that chemical reactions can act
as a switch. For example, a chemical
reaction could act as a switch with one
state blue and the other clear. The
chemical switch stays either blue or
clear for long periods of time and can be
switched from one color to the other by
changing a few chemicals.
Switches alone, however, do not
make a computer. There must be some
way of reading chemical switches, set
ting them and using them to perform
calculations.
In 1991 John Ross and his collabo
rator Alan Hjelmfelt of the University
of Goetingen in Germany demonstrat
ed that chemical reactions can control
other chemical reactions. For example,
if either chemical in two tubes is blue,
the result of a subsequent reaction
involving the two chemicals would
always be red. If neither was blue, the
result would be clear.
By 1992 Ross, Hjelmfelt and
Edward Weinberger, another
researcher, had used chemical switches

and chemical interactions to demon
strate all the basic processes of a digital
computer. Since their calculations took
place in a single tank, each "switch"
had to be made up of different chemi
cals. As more chemical switches were
added, an increasing number of differ
ent chemical compounds had to be
poured into the tank.
The number of chemicals needed
was reduced by using several tanks
connected by pumps and tubes, which
provided the exchange of solutions
needed for the switches to interact.
The interaction among the chemical
switches is key to their ability to solve
problems. Pattern recognition, a stan
dard problem in computer science,
lends itself well to chemical computa
tion. In a recent experiment Ross,
Hjelmfelt and collaborators Jean-
Pierre Laplante and Maria Pemberton
of the Department of Chemical Engi
neering of the Royal Military College of
Canada demonstrated that a linked
network of chemical reactions can rec
ognize patterns.
In their experiment, eight tanks of
chemical solutions were prepared, each
with a blue solution or a clear solution.
The pattern of blue and clear solutions
was the input pattern to their chemical
computer. The patterns the system
could recognize were "programmed" by
setting up pumps which exchanged
solutions among the tanks.
After a couple of hours the tanks set
tled into a new pattern which identified
whether or not the input pattern was
recognized by the network. For exam
ple, if the tanks all turned clear the pat
tern was not recognized, but if a signa
ture pattern appeared, the pattern was
recognized.
As Ross emphatically pointed out,
the immediate applications of chemical
computers are not clear. It is unlikely,
given their slow speed and present
large size, that they will compete with
electronic devices in the near future. It
might be possible, however, to reduce a
chemical computer to a tiny package.
Cells, for example, contain hundreds of
chemical reactions yet are barely visible
to the unaided eye.
Ross mentioned cautiously that the
self-regulating medicines already avail
able are in some sense specialized
chemical computers. Such medications
deposit medicine depending on the indi
vidual's needs. Increased understand
ing of chemical computers might lead
to even smarter medicine, he suggest
ed.
Despite the novelty and potential of
chemical computers, they are a far cry
from molecule-based calculating
machines. The chemical solutions used
in experiments contain trillions of
atoms which combine and react with
each other.
Computing with .nolecules
Molecular biology, with its tiny
machines that do everything from
repair DNA to synthesize proteins, may
hold the key to computers made of sin
gle molecules.
In the Nov. 11,1994 issue of Science
Magazine, Leonard A. Adleman of the
University of Southern California
described his technique for using DNA
and some of nature's "molecular
machines" to solve a well-known math
ematical problem.
In the "Traveling Salesman" prob
lem, a salesman must visit several cities
connected by two-way and one-way
flights, starting and finishing in partic
ular cities. Is it possible for the sales
man to visit each of the cities exactly
once?
Adleman used bits of DNA and
biomolecular machines to form all pos

sible itineraries. He then eliminated all
the routes that began or ended in the
wrong cities, or did not visit each city
exactly once.
DNA is made of two long, interwo
ven strings of molecules called

nucleotides. The four nucleotides in
DNA — adenine, thymine, cytosine and
guanine — are labeled A, T, C and G.
Each nucleotide on one strand pairs
with a nucleotide on the other strand.
Specifically, A pairs with T and C pairs
with G. If, for example, one strand of
the DNA contains ATCG then the
other strand must contain the match
ing pattern TAGC.
Each "city" in the experiment was
coded in a unique 20-nucleotide pat
tern. The "flights" were included using
nucleotide segments that joined the
small "city" patterns together in a par
ticular order. For example, the "one
way flight" strand Cl 2 would join Cl to
C 2 but not C 2 to Cl.
Adleman combined the city strands
and the flight strands, then used a spe
cial biochemical reaction to form all
possible flight patterns.
He then eliminated all paths that did
not begin and end in the designated
cities. To accomplish this, only the
strands that began and ended with
proper cities were replicated using
another biochemical technique.
The DNA solution still contained
paths including visits to the wrong
number of cities. To select only strands
containing exactly seven cities, the
DNA strands were separated by the
number of nucleotide codes, or "cities,"
in the chain. Only strands containing
exactly seven nucleotide codes were
replicated.

The final step was to select only the
strands containing visits to every city.
The paired strands of the DNA were
separated. Strands which contained the
nucleotide pattern for the first city
were selected and the rest of the

strands were ignored. The process was
then repeated for each of the cities.
Any DNA which remained con
tained visits to every city exactly once.
If any DNA remained then the sales
man could fulfill his mission, otherwise
he could not.
If a new city were added or the
flights were changed, Adleman would
only have to change the nucleotide
codes in his initial mixture. The DNA
would automatically try out all the pos
sible new paths and arrive at a solution.
In contrast, a digital computer would
have to try out an increasingly complex
set of paths. Eventually the computa
tion time would become enormous.
Molecular computers are highly
compact and energy-efficient compared
to electronic computers, as Adleman
discusses in his paper. The density of
information storage in DNA is over one
trillion times the density of a typical
videotape. The chemical energy con
sumed in Adleman's DNA computer is
approximately 10 billion times less
than a digital computer would require.
The drawback of using DNA as a
computer is that it is highly special
ized. It was a fortunate coincidence
that the "Traveling Salesman" prob
lem could be coded in DNA. Even so,
the experiment took seven days of
work. Organizing DNA or other
molecules to do things like multiplica
tion or division would be very cumber
some, Adleman points out.


Andrew Martinez-Fonts - Daily
