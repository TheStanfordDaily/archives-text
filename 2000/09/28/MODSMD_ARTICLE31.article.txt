# Neural networks simulate human learning
## 
### DAVID MYSZEWSKI 
Can computers think? Can they learn?
We may finally be on the brink of an answer.
Computer researchers have created neural
networks that can simulate the human
brain's thought and learning processes.
By interconnecting a series <>1 artificial
neurons, called percepions, a neural net
work can create a massively parallel archi
tecture that solves problems exponentially
faster than coventional computers.
1 he idea of neural networks was first put
into practice in the 19505. Stanford Profes
sor Bernard Widrow and doctoral suideni-
Marcian Hoff created two prototypes in
1959, which they called "ADALINE" and
"MADALINE," short for Adaptive Linear
Elements and Multiple Adaptive Linear Ele
ments. MADALINE was the first neural net
work to be applied to a real-world problem,
eliminating echoes 112 rom phone lines.
Conventional computers are very rigid,
performing certain instructions sequential
ly. 1 hey excel at performing actions which
have a clearly delineated algorithm, those
that can be solved by a set of rules. They lag,
however, when it comes to solving problems
with vague answers, like those that require
conceptualization or the use of images.
Human beings "modify their code" by
learning, which this is what neural networks
aim to do. By modifying the code after
learning, they can learn and grow. Neural
networks are based on this principle of self
modification.
There are many applications for which
neural networks, because of properties such
as self-modification, are suited. Character
recognition is a problem that has become in
creasingly important with the popularity of
wireless handheld devices. Neural networks
can be trained to recognize a certain per
son's handwriting fora given svmbol. ()nce
the network is trained, it can use that knowl
edge to convert handwriting to text.
l he financial world has much to gain
from neural networks as well. Predicting
stock prices can be a dillicult and inaccurate
process due to the many different factors
that may affect a certain stock's prices.
Computers in general are good at man
aging vast amounts of data. Neural net
works are no different, but they have the ad
ditional advantage that they are good at

summarizing and conceptualizing the data
into meaningful patterns.
It follows that neural networks have been
used in the prediction of stock market prices
with some success. By assembling the many
different factors which affect a stock's price,
the neural network can make .in educated
guess of the next day's prices.
Neural networks can also be Used to ex
amine loan applications and determine,
based on past experience, whether specific
loans should be approved.
1 lumans, on average, have about 70 per
cent accuracy in this field; some neural net
works. on the other hand, have achieved 85
to 90 percent accuracy.
The success of neural networks has not
come without some practical difficulties. II
an individual is denied a loan, he'or she
wants to know win the loan was denied. Due
to the complexity of tracing through a neur
al network's learning process, it can be diffi
cult for humans to determine why the net
work makes a particular decision.

In spite of their power, neural networks
still cannot overcome human stupidity. For
an example, in the 1980s the Pentagon
wanted to create a system that would deter
mine the presence of hidden tanks in sur
veillance photos. A research team took 200
phot<>s. 100 of tanks hiding behind trees and
one hundred of trees without tanks.
After the neural network was trained for
most of the photos, it was very accurate.
However, when the government wanted to
look at other pictures, the results were en
tirely random.
1 liese results were baffling until re
searchers realized that all of the pictures
with tanks had been taken on cloudy days
while iill of the pic tures without tanks had
been taken on sunny clays. 1 he neural net
work did not train itself to see whether there
was a tank hiding behind a tree, but instead
it trained itself to see whether it was sunny!
(onventionl computers emply a series of
"if/ else" statements to make decisions. This
paradigm is inherently limited. Actions or

decisions which humans perform easily art
very difficult to program.
Neural networks take a more bottom-up
approach. This means that, much like lui
mans, they may have some knowledge hard
wired into them. For instance, humans in
stinctively know to eat if they arc hungry, or
sleep if they are tired. From this hardwired
knowledge, the network is able to extrapo
late a series of decision branches that even
tually leads it to a viable solution.
One of the major problems with neural
networks is the lack of hardware support.
In order fora neural network to solve
problems quickly, it has to rely on hard
ware that is specialized solelv for neural
networks.
Furthermore, while a neural network can
be trained to recognize handwriting in a
matter of minutes, more complex real
world problems can take weeks to learn. Al
though these applications are currently be
yond the scope of present technology,
droids may be the brains of tomorrow.

